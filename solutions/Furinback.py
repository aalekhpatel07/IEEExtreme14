LONG_STRING = '''
                                    >,<>>,>,<[->-               
                                  >+<><<]+->>[-<<+>>]            
                                <+-><><<<[-+->-<+-<+>]<          
                               [->+<]><>>>>>><>++->>+->>         
                              >>>+[>><>>>[-]<[-<>-+]<<>[-        
                             +-]-++-+-<         [-]<><<>[+       
                            ---+]<><<             <<+-<<<<>      
                           -+<><<<>                 <+-<<[->     
                          >>>>>>+                     >>>>>-+    
                         >+<<<><            <          <><<<<<   
                        <<<<]>[           ->>           >>><><>  
                       ><>>+>>          >>>>+            <<<<<>< 
                      <<<<+-<           <<<]>             [->>>>>
                                        >><>+                    
                                        >>>>-                    
                                        +><>>                    
                                        +<<<<                    
                                        <<+-<                    
         <<<><<<<        -+><]     >>-++-+>+-+[<-]      <[->>    
      <>++-<<<]>>>>      [-<<<     +--+<<<<+>><>>>      >>>]>    
     [-<<-+<<<<<+<>>     +->>>     >>>]>[-<<<<><<<      ><<+>    
    >>>>>>]>>>>>><>>+    [-<<<     <+--+<><+-<<<<<      <[->>    
   +>>+<<<<]+->[->>+>>   +-+<<     <<]>[-<<+>>]>[-      <<+>>    
  ]+[[<>-]-++>[<-]<+-[   +--><     >><>-<<<]>>-+->      >>+>[    
 <-]<+-[-       >+>[-    <-]<[          >>[-<           <-+->    
 ]-<<[->         ><-     >+->-          +-<<<           <]]<]    
 >>-<<<           <      <+>[>          <<-]<           [>+->    
[-+<<-                   >]<<[          <]]>-           +-]>>    
>>><>>                   >><>+          ]-<<<           >+-<<    
<>+>-                    ++[<-          ]<[-+           >>+[<    
<<>->                    -+]<<          [>>>+           [<-+<    
<->>]                    <<<[<          ]]]>-           ]>>>>    
[-]<<                    <<<<<          -+<><           <<<<<    
<[-]>                    >+>+[          <-]<[           ->>+<    
><<<]                    >+>[<          -]<[>           >[<<-    
>]<<[                    <]]>-          [+>>>           >>>><    
++-++                    +++++          ++<<<           <<<+>    
+-[<<>                   -]<[>          >[<<-           >]<<[    
<]]>-[                   ++>[<          -]<[-           >>-<<    
 <]>>->           >      +>>+>          -[<-]           <[<<[    
 ->>>+<<         ><<     ]+->>          >>>+>           +[<><    
 -]<><[->       >+<<<    ]<<-<          ]<<<<           +>[<-    
  ]<[>>[<<->]<<[<]]>-]   >>+++          +++++[   ->     +++++    
   +<]>[-<<<<+>>>>]>>>   >>+><          >-+[<-]<[>>     [<<->    
    ]<<[<]]>-[++>[<-]    <[->>          -<<<]>>-<<<     <<<<<    
     +>+[<-]<[->>+<<     <]>>>          >>>>>+>[<-      ]<[>>    
      [<<->]<<[<]]>      -]<<[           -]<<<<<+>      [<-]<    
         [>>[<<->        ]<<[<            ]]>-]<<       [.<]!    
'''


def solve(s):
    """
    Solve the problem here.
    :return: The expected output.
    """
    mp = {
        '>': '$$ptr;',
        '<': '@@ptr;',
        '+': '$$*ptr;',
        '-': '@@*ptr;',
        '.': 'putchar(*ptr);',
        ',': '*ptr=getchar();',
        '[': 'while (*ptr) {',
        ']': '}'
    }

    # $ is + and @@ is -
    temp = s
    for i in mp:
        temp = temp.replace(str(i), str(mp[i]))

    temp = temp.replace('$', '+').replace('@', '-')
    print('char ptr[30000] = {0};' + temp)

    return 'char ptr[30000] = {0};' + temp


def is_valid(s):
    stack = 0
    i = 0
    while i < len(s):
        if s[i] == '[':
            stack += 1
        elif s[i] == ']':
            stack -= 1
        if stack < 0:
            return False
        i += 1
    if stack > 0:
        return False
    return True


def transform(s):
    stack = 0

    return



def driver():
    """
    Make sure this driver returns the result.
    :return: result - Result of computation.
    """
    from collections import Counter

    updated = LONG_STRING.strip().replace(' ', '').replace('\n', '')
    anotha_one = '''
    >,>,>,<[--+]>>[-+]<<<[--+]<[-+]>>>>>>+>>>>>>>+[>>>>[-]<[-]<[-]<[-]
<[-]<<<<<<<<<<<<[-++]>[-++]>[-++]>>+>+[<-]<[-+<]>>>>[-+]>[-+]>[-+]>>>>>>>+[-<<<<<<<<<<<[-++]>[-++]>
[-+]>[-+]+[[-]+>[<-]<[--<]>>->>>+>[<-]<[->+>[-<-]<[>>[-<-]-<<[--
-<]]<]>>-<<<<<+>[<-]<[>>[<-]<<[<]]>-]>>>>>>>>+]-<<<<+>+[<-]<[>>+[<-]<<[>>
>+[<-]<<<[<]]]>-]>>>>[-]<<<<<<<<<<<<<<[-]>>+>+[<-]<[-+<]>+>[<-]<[>>[<-]
<<[<]]>-[++++++++++++>[<-]<[>>[<-]<<[<]]>-[++>[<-]<[--<]>>->>
+>>+>-[<-]<[<<[-+]>>>>>+>+[<-]<[-+<]<<-<]<<<<+>[<-]<[>>[<-]<<[<]]>-]
>>++++++++[-++++++]>[-+]>>>>>+>[<-]<[>>[<-]<<[<]]>-[++>[<-]<[--<]
>>-<<<<<<<<+>+[<-]<[-+<]>>>>>>>>+>[<-]<[>>[<-]<<[<]]>-]<<[-]<<<<<+>[<-]<
[>>[<-]<<[<]]>-]<<[.<]
    '''
    print(updated)
    # freq = Counter(updated)
    # for q in freq:
    #     print(q, freq[q])
    # print(sum(v for v in freq.values()))
    # print(is_valid('[[][[]]'))
    stripped = anotha_one.rstrip().lstrip().replace('\n', '').replace(' ', '')
    solve(stripped)

    # a, b = list(map(int, input().split(' ')))
    # result = solve()
    # print(result)
    return 0


def main():
    return driver()


if __name__ == '__main__':
    main()
